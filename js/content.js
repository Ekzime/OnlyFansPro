// Content Script –¥–ª—è OnlyFans Manager Pro
// –ü–∞—Ä—Å–µ—Ä —Ñ–∞–Ω–∞—Ç–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π

console.log('üéØ OnlyFans Manager Pro - Content script –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let lastScanTime = 0;
let scanInProgress = false;
let observerActive = false;
let retryAttempts = 0;
const MAX_RETRY_ATTEMPTS = 3;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å DOM
const SELECTORS = {
    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Ñ–∞–Ω–∞—Ç–æ–≤
    fanContainer: '.b-fans__container',
    fanItems: '.b-users__item.m-fans',
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    userAvatar: '.g-avatar',
    userName: '[at-attr="custom_name"]',
    userHandle: '[at-attr="user_link"] .g-user-username',
    onlineStatus: '.online_status_class.online',
    
    // –ö–Ω–æ–ø–∫–∏ –∏ —Å—Å—ã–ª–∫–∏
    messageButton: 'a[href*="/my/chats/chat/"]',
    userProfileLink: 'a[href*="onlyfans.com/"][href*="/my/chats/chat/"]:not([href*="/my/chats/chat/"])',
    
    // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è
    messageModal: '.b-chat__message-form',
    messageInput: '.b-chat__message-form textarea',
    sendButton: '.b-chat__message-form [type="submit"]',
    
    // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏
    loadingIndicator: '.infinite-loading-container'
};

// –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç background script
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
    console.log('üì® Content script –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ:', message.type);
    
    handleMessage(message)
        .then(response => {
            console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:', response);
            sendResponse(response);
        })
        .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤ content script:', error);
            sendResponse({ success: false, error: error.message });
        });
    
    return true; // –î–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
async function handleMessage(message) {
    switch (message.type) {
        case 'SCAN_FANS':
            return await scanFans();
            
        case 'SEND_MESSAGE':
            return await sendMessageToFan(message.data);
            
        case 'CHECK_PAGE':
            return await checkPageType();
            
        default:
            throw new Error(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è: ${message.type}`);
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
async function checkPageType() {
    const url = window.location.href;
    const isFansPage = url.includes('/collections/user-lists/subscribers');
    const isChatPage = url.includes('/my/chats');
    
    return {
        success: true,
        pageType: isFansPage ? 'fans' : isChatPage ? 'chat' : 'other',
        url: url
    };
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–Ω–∞—Ç–æ–≤
async function scanFans() {
    console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–Ω–∞—Ç–æ–≤...');
    
    if (scanInProgress) {
        console.log('‚è≥ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ');
        return { success: false, error: '–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è' };
    }
    
    scanInProgress = true;
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        if (!window.location.href.includes('/collections/user-lists/subscribers')) {
            throw new Error('–ù–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ñ–∞–Ω–∞—Ç–æ–≤');
        }
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        await waitForPageLoad();
        
        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ñ–∞–Ω–∞—Ç–æ–≤
        await scrollToLoadAllFans();
        
        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–Ω–∞—Ç–æ–≤
        const fans = await extractFansData();
        
        console.log('üë• –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–Ω–∞—Ç–æ–≤:', fans.length);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ background script
        await chrome.runtime.sendMessage({
            type: 'FANS_FOUND',
            data: fans
        });
        
        lastScanTime = Date.now();
        retryAttempts = 0;
        
        return {
            success: true,
            fansCount: fans.length,
            onlineCount: fans.filter(f => f.isOnline).length
        };
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
        retryAttempts++;
        
        if (retryAttempts < MAX_RETRY_ATTEMPTS) {
            console.log(`üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ ${retryAttempts}/${MAX_RETRY_ATTEMPTS}`);
            await delay(2000);
            return await scanFans();
        }
        
        throw error;
    } finally {
        scanInProgress = false;
    }
}

// –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
async function waitForPageLoad() {
    console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
    
    return new Promise((resolve, reject) => {
        const checkLoaded = () => {
            const container = document.querySelector(SELECTORS.fanContainer);
            if (container && document.querySelectorAll(SELECTORS.fanItems).length > 0) {
                console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
                resolve();
            } else {
                setTimeout(checkLoaded, 500);
            }
        };
        
        checkLoaded();
        
        // –¢–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
        setTimeout(() => {
            reject(new Error('–¢–∞–π–º-–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã'));
        }, 15000);
    });
}

// –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ñ–∞–Ω–∞—Ç–æ–≤
async function scrollToLoadAllFans() {
    console.log('üìú –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ñ–∞–Ω–∞—Ç–æ–≤...');
    
    let lastCount = 0;
    let stableCount = 0;
    let attempts = 0;
    const maxAttempts = 10;
    
    while (stableCount < 3 && attempts < maxAttempts) {
        const currentCount = document.querySelectorAll(SELECTORS.fanItems).length;
        
        if (currentCount === lastCount) {
            stableCount++;
        } else {
            stableCount = 0;
            lastCount = currentCount;
        }
        
        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≤–Ω–∏–∑
        window.scrollTo(0, document.body.scrollHeight);
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        await delay(1000);
        
        attempts++;
        console.log(`üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–Ω–∞—Ç–æ–≤: ${currentCount}, –ø–æ–ø—ã—Ç–∫–∞: ${attempts}/${maxAttempts}`);
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.scrollTo(0, 0);
    await delay(500);
    
    console.log('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–Ω–∞—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

// –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–∞–Ω–∞—Ç–æ–≤
async function extractFansData() {
    console.log('üìã –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–∞–Ω–∞—Ç–æ–≤...');
    
    const fanElements = document.querySelectorAll(SELECTORS.fanItems);
    const fans = [];
    
    for (let i = 0; i < fanElements.length; i++) {
        try {
            const fanElement = fanElements[i];
            const fanData = await extractSingleFanData(fanElement);
            
            if (fanData) {
                fans.push(fanData);
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–∞–Ω–∞—Ç–∞:', error);
        }
    }
    
    return fans;
}

// –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–¥–Ω–æ–≥–æ —Ñ–∞–Ω–∞—Ç–∞
async function extractSingleFanData(fanElement) {
    const nameElement = fanElement.querySelector(SELECTORS.userName);
    const handleElement = fanElement.querySelector(SELECTORS.userHandle);
    const avatarElement = fanElement.querySelector(SELECTORS.userAvatar);
    const isOnline = fanElement.querySelector(SELECTORS.onlineStatus) !== null;
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è
    const name = nameElement ? nameElement.textContent.trim() : 'Unknown';
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º username (—É–±–∏—Ä–∞–µ–º @)
    let username = 'unknown';
    if (handleElement) {
        username = handleElement.textContent.trim().replace('@', '');
    } else {
        // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –∏–∑ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
        const profileLink = fanElement.querySelector('a[href*="onlyfans.com/"]');
        if (profileLink) {
            const href = profileLink.getAttribute('href');
            const match = href.match(/onlyfans\.com\/([^\/\?]+)/);
            if (match) {
                username = match[1];
            }
        }
    }
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º URL –∞–≤–∞—Ç–∞—Ä–∞
    let avatarUrl = null;
    if (avatarElement) {
        const imgElement = avatarElement.querySelector('img');
        if (imgElement) {
            avatarUrl = imgElement.getAttribute('src');
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–¥–∞–≤–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–µ—Å–ª–∏ –µ—Å—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã)
    const recentlyOnline = checkRecentActivity(fanElement);
    
    return {
        name: name,
        username: username,
        isOnline: isOnline,
        recentlyOnline: recentlyOnline,
        avatarUrl: avatarUrl,
        profileUrl: `https://onlyfans.com/${username}`,
        lastSeen: isOnline ? Date.now() : null
    };
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–∞–≤–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (—ç–≤—Ä–∏—Å—Ç–∏–∫–∞)
function checkRecentActivity(fanElement) {
    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–µ–¥–∞–≤–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    // –ú–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –≤ DOM
    const hasRecentIndicators = fanElement.querySelector('.recent-activity') !== null;
    return hasRecentIndicators;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Ñ–∞–Ω–∞—Ç—É
async function sendMessageToFan(messageData) {
    console.log('üíå –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ñ–∞–Ω–∞—Ç—É:', messageData.name);
    
    try {
        // –ù–∞—Ö–æ–¥–∏–º —Ñ–∞–Ω—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        const fanElement = await findFanElement(messageData.username);
        
        if (!fanElement) {
            throw new Error(`–§–∞–Ω ${messageData.username} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ`);
        }
        
        // –ö–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
        const messageButton = fanElement.querySelector(SELECTORS.messageButton);
        if (!messageButton) {
            throw new Error('–ö–Ω–æ–ø–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
        
        console.log('üñ±Ô∏è –ö–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è...');
        messageButton.click();
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —á–∞—Ç–∞
        await waitForChatPage();
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await typeAndSendMessage(messageData.processedMessage);
        
        console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
        
        return {
            success: true,
            recipient: messageData.username,
            message: messageData.processedMessage
        };
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        throw error;
    }
}

// –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ —Ñ–∞–Ω–∞—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
async function findFanElement(username) {
    const fanElements = document.querySelectorAll(SELECTORS.fanItems);
    
    for (const fanElement of fanElements) {
        const handleElement = fanElement.querySelector(SELECTORS.userHandle);
        if (handleElement) {
            const fanUsername = handleElement.textContent.trim().replace('@', '');
            if (fanUsername === username) {
                return fanElement;
            }
        }
    }
    
    return null;
}

// –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —á–∞—Ç–∞
async function waitForChatPage() {
    console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–∞...');
    
    return new Promise((resolve, reject) => {
        const checkInterval = setInterval(() => {
            if (window.location.href.includes('/my/chats/chat/')) {
                const messageForm = document.querySelector(SELECTORS.messageInput);
                if (messageForm) {
                    clearInterval(checkInterval);
                    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —á–∞—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
                    resolve();
                }
            }
        }, 500);
        
        setTimeout(() => {
            clearInterval(checkInterval);
            reject(new Error('–¢–∞–π–º-–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–∞'));
        }, 10000);
    });
}

// –í–≤–æ–¥ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
async function typeAndSendMessage(message) {
    console.log('‚å®Ô∏è –í–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ:', message);
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    const messageInput = document.querySelector(SELECTORS.messageInput);
    if (!messageInput) {
        throw new Error('–ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
    messageInput.focus();
    messageInput.value = message;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    messageInput.dispatchEvent(new Event('input', { bubbles: true }));
    messageInput.dispatchEvent(new Event('change', { bubbles: true }));
    
    await delay(500);
    
    // –ù–∞—Ö–æ–¥–∏–º –∏ –∫–ª–∏–∫–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
    const sendButton = document.querySelector(SELECTORS.sendButton);
    if (!sendButton) {
        throw new Error('–ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    console.log('üì§ –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏...');
    sendButton.click();
    
    // –ñ–¥–µ–º –æ—Ç–ø—Ä–∞–≤–∫–∏
    await delay(1000);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–ø–æ–ª–µ –æ—á–∏—Å—Ç–∏–ª–æ—Å—å)
    if (messageInput.value !== '') {
        throw new Error('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
    }
    
    console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
}

// –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM
function startDOMObserver() {
    if (observerActive) return;
    
    console.log('üëÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å DOM...');
    
    const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
            if (mutation.type === 'childList') {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ–∞–Ω–∞—Ç–æ–≤
                mutation.addedNodes.forEach((node) => {
                    if (node.nodeType === Node.ELEMENT_NODE) {
                        const newFans = node.querySelectorAll && node.querySelectorAll(SELECTORS.fanItems);
                        if (newFans && newFans.length > 0) {
                            console.log('üë• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ —Ñ–∞–Ω–∞—Ç—ã:', newFans.length);
                            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤—ã—Ö —Ñ–∞–Ω–∞—Ç–æ–≤
                        }
                    }
                });
            }
        });
    });
    
    observer.observe(document.body, {
        childList: true,
        subtree: true
    });
    
    observerActive = true;
}

// –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function delay(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}

function getRandomDelay(min = 500, max = 2000) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

// –ò–º–∏—Ç–∞—Ü–∏—è —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è
async function humanDelay() {
    const delayTime = getRandomDelay(800, 2500);
    console.log(`‚è∞ –ü–∞—É–∑–∞ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è: ${delayTime}ms`);
    await delay(delayTime);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω—Ç–∏-–±–æ—Ç –∑–∞—â–∏—Ç—ã
function checkForAntiBot() {
    const suspiciousElements = [
        'captcha',
        'recaptcha',
        'cloudflare',
        'bot-detection',
        'anti-bot'
    ];
    
    for (const element of suspiciousElements) {
        if (document.querySelector(`[class*="${element}"], [id*="${element}"]`)) {
            console.warn('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã –∞–Ω—Ç–∏-–±–æ—Ç –∑–∞—â–∏—Ç—ã');
            return true;
        }
    }
    
    return false;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è content script
function initialize() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OnlyFans Manager Pro content script');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const pageType = window.location.href.includes('/collections/user-lists/subscribers') ? 'fans' : 'other';
    console.log('üìÑ –¢–∏–ø —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', pageType);
    
    if (pageType === 'fans') {
        // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ñ–∞–Ω–∞—Ç–æ–≤
        startDOMObserver();
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º background script –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
        chrome.runtime.sendMessage({
            type: 'CONTENT_READY',
            data: { pageType: 'fans' }
        }).catch(() => {
            // Background script –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –≥–æ—Ç–æ–≤ - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
        });
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initialize);
} else {
    initialize();
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
setTimeout(() => {
    if (!observerActive && window.location.href.includes('/collections/user-lists/subscribers')) {
        console.log('üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
        initialize();
    }
}, 2000); 